
/*
 * This file is automatically generated by oml2-scaffold. Please do not edit.
 */

#ifndef VLC_OML_H
#define VLC_OML_H

#ifdef __cplusplus
extern "C" {
#endif

/* Get size_t and NULL from <stddef.h>.  */
#include <stddef.h>
#include <stdio.h>
#include <oml2/omlc.h>

typedef struct {
  OmlMP* dashRateAdaptation;
  OmlMP* dashDlSession;
} oml_mps_t;


#ifdef OML_FROM_MAIN
/*
 * Only declare storage once, usually from the main
 * source, where OML_FROM_MAIN is defined
 */


static OmlMPDef oml_dashRateAdaptation_def[] = {
  {"chosenRate_bps", OML_UINT64_VALUE},
  {"empiricalRate_bps", OML_UINT64_VALUE},
  {"decisionRate_bps", OML_UINT64_VALUE},
  {"buffer_percent", OML_UINT64_VALUE},
  {NULL, (OmlValueT)0}
};

static OmlMPDef oml_dashDlSession_def[] = {
  {"chunkCount", OML_INT32_VALUE},
  {"readSession_B", OML_INT32_VALUE},
  {"readChunk_B", OML_INT32_VALUE},
  {"timeSession_s", OML_DOUBLE_VALUE},
  {"timeChunk_s", OML_DOUBLE_VALUE},
  {NULL, (OmlValueT)0}
};


static oml_mps_t g_oml_mps_storage2;
oml_mps_t* g_oml_mps_vlc2 = &g_oml_mps_storage2;

static void
oml_register_mps()

{
  g_oml_mps_vlc2->dashRateAdaptation = omlc_add_mp("dashRateAdaptation", oml_dashRateAdaptation_def);
  g_oml_mps_vlc2->dashDlSession = omlc_add_mp("dashDlSession", oml_dashDlSession_def);

}



#else
/*
 * Not included from the main source,
 * only declare the global pointer to the MPs
 */

extern oml_mps_t* g_oml_mps_vlc;


#endif /* OML_FROM_MAIN */


inline void oml_inject_dashRateAdaptation(OmlMP* mp, uint64_t chosenRate_bps, uint64_t empiricalRate_bps,
  uint64_t decisionRate_bps, uint64_t buffer_percent)
{
  OmlValueU v[4];

  omlc_zero_array(v, 4);

  omlc_set_uint64(v[0], chosenRate_bps);
  omlc_set_uint64(v[1], empiricalRate_bps);
  omlc_set_uint64(v[2], decisionRate_bps);
  omlc_set_uint64(v[3], buffer_percent);

  omlc_inject(mp, v);

}


inline void oml_inject_dashDlSession(OmlMP* mp, int32_t chunkCount, int32_t readSession_B, int32_t readChunk_B, double timeSession_s, double timeChunk_s)
{
  OmlValueU v[5];

  omlc_zero_array(v, 5);

  omlc_set_int32(v[0], chunkCount);
  omlc_set_int32(v[1], readSession_B);
  omlc_set_int32(v[2], readChunk_B);
  omlc_set_double(v[3], timeSession_s);
  omlc_set_double(v[4], timeChunk_s);

  omlc_inject(mp, v);


}

/* Compatibility with old applications */
#ifndef g_oml_mps
# define g_oml_mps	g_oml_mps_vlc
#endif

#ifdef __cplusplus
}
#endif

#endif /* VLC_OML_H */
